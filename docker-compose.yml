version: '3'
services:
  db:
    platform: linux/amd64
    image: postgres:${POSTGRES_VERSION}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    container_name: postgres
    networks:
      - practise

  postgres_test:
    platform: linux/amd64
    image: postgres:${POSTGRES_VERSION}
    environment:
      - POSTGRES_USER=${TEST_POSTGRES_USER}
      - POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD}
      - POSTGRES_DB=${TEST_POSTGRES_DB}
    ports:
      - ${TEST_DB_PORT}:${DB_PORT}
    container_name: postgres_test
    volumes:
      - postgresql-test_data:/var/lib/postgresql/data
    networks:
      - practise

  pgadmin:
    platform: linux/amd64
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:  
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    depends_on:
      - db
    networks:
      - practise
  
  
  api:
    platform: linux/amd64
    build: .
    command: bash -c "alembic upgrade head && uvicorn main:app --port ${APP_PORT} --host ${HOST_PORT} --reload"
    volumes:
      - .:/api
    depends_on:
      - db
    ports:
      - ${APP_PORT}:${CONTAINER_PORT}
    env_file:
      - .env
    restart: unless-stopped
    container_name: api
    networks:
      - practise

  redis:
    platform: linux/amd64
    image: redis:${REDIS_VERSION}
    volumes:
      - redis_data:/data
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: ["redis-server", "--appendonly", "yes"]
    container_name: redis_fastapi_db
    restart: always
    networks:
      - practise

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-ui
    environment:
      - REDIS_HOSTS=${REDIS_HOSTS}
      - HTTP_USER=${HTTP_USER}
      - HTTP_PASSWORD=${HTTP_PASSWORD}
    ports:
      - ${REDIS_COMMANDER_PORT}:${REDIS_COMMANDER_PORT}
    depends_on:
      - redis
    networks:
      - practise

volumes:
  postgresql-data:
  redis_data:
  postgresql-test_data:

networks:
  practise: